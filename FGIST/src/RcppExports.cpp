// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// FastGroupIST
Rcpp::List FastGroupIST(const arma::mat& X1, const arma::vec& y1, double& Omega, double& w, double& epsilon, double& eta, double& tau0, double& theta);
RcppExport SEXP _FGIST_FastGroupIST(SEXP X1SEXP, SEXP y1SEXP, SEXP OmegaSEXP, SEXP wSEXP, SEXP epsilonSEXP, SEXP etaSEXP, SEXP tau0SEXP, SEXP thetaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type X1(X1SEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type y1(y1SEXP);
    Rcpp::traits::input_parameter< double& >::type Omega(OmegaSEXP);
    Rcpp::traits::input_parameter< double& >::type w(wSEXP);
    Rcpp::traits::input_parameter< double& >::type epsilon(epsilonSEXP);
    Rcpp::traits::input_parameter< double& >::type eta(etaSEXP);
    Rcpp::traits::input_parameter< double& >::type tau0(tau0SEXP);
    Rcpp::traits::input_parameter< double& >::type theta(thetaSEXP);
    rcpp_result_gen = Rcpp::wrap(FastGroupIST(X1, y1, Omega, w, epsilon, eta, tau0, theta));
    return rcpp_result_gen;
END_RCPP
}
// GroupIST
Rcpp::List GroupIST(const arma::mat& X1, const arma::vec& y1, double& lambda, double& Omega, double& w, double& epsilon, double& eta, double& tau0);
RcppExport SEXP _FGIST_GroupIST(SEXP X1SEXP, SEXP y1SEXP, SEXP lambdaSEXP, SEXP OmegaSEXP, SEXP wSEXP, SEXP epsilonSEXP, SEXP etaSEXP, SEXP tau0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type X1(X1SEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type y1(y1SEXP);
    Rcpp::traits::input_parameter< double& >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double& >::type Omega(OmegaSEXP);
    Rcpp::traits::input_parameter< double& >::type w(wSEXP);
    Rcpp::traits::input_parameter< double& >::type epsilon(epsilonSEXP);
    Rcpp::traits::input_parameter< double& >::type eta(etaSEXP);
    Rcpp::traits::input_parameter< double& >::type tau0(tau0SEXP);
    rcpp_result_gen = Rcpp::wrap(GroupIST(X1, y1, lambda, Omega, w, epsilon, eta, tau0));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_FGIST_FastGroupIST", (DL_FUNC) &_FGIST_FastGroupIST, 8},
    {"_FGIST_GroupIST", (DL_FUNC) &_FGIST_GroupIST, 8},
    {NULL, NULL, 0}
};

RcppExport void R_init_FGIST(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
